---
- name: Install nginx
  ansible.builtin.dnf: 
    name: nginx
    state: present
  notify: Restart nginx

- name: Compress web app
  community.general.archive:
    path: /html
    dest: test.tar.gz

- name: Create site directory
  ansible.builtin.file:
    path: /var/www/
    state: directory
    recurse: true
  notify: Restart nginx
    
- name: Untar archive
  ansible.builtin.unarchive:
    src: site.tar.gz
    dest: /var/www/
  register: unarchive
    
- name: manage files in /var/www/
  ansible.builtin.command: semanage fcontext -a -t httpd_sys_content_t '/var/www/html(/.*)?'
  ignore_errors: True

- name: Apply new SELinux file context to filesystem
  ansible.builtin.command: restorecon -irv /var/www/html/
    
- name: Create site directory
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: Restart nginx
    
- name: Start nginx service
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: Install firewalld depends
  ansible.builtin.dnf: 
    name: 
      - firewalld
      - python3-firewall
    state: present
    
- name: Add http firewall rule
  ansible.posix.firewalld:
    service: http
    permanent: true
    state: enabled
  notify: Reload firewall
    
- name: Refresh handlers
  meta: flush_handlers
    
- name: Wait for webapp to be available
  ansible.builtin.uri:
    url: "http://{{ ansible_host }}"
  delegate_to: localhost
  become: false
  
- name: Show web url
  ansible.builtin.debug:
    msg: "http://{{ ansible_host }}"
